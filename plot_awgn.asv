%Function to produce and plot additive white Gaussian noise for a given
%noise power
function plot_awgn(P_dBm)
    % Analog sampling frequency (signal components are between 0-10GHz)
    fs_analog = 200E9; % 50 GHz just to be safe
    
    
    % Number of extra Zeros to ADD for padding NOT total number of FFT.
    Zpd = 100000;
    
    
    % Free space impedance constant
    W = 1/(2*377);
    %% Viewing Varibles - Section 3
    
    % FD ylim and xlim
    
    
    %% Creating the analog signal - Section 4
    
    % Creating the time vector
    t_end = 10/fs_analog; % 10 periods to be captured 
    t_analog = 0:1/fs_analog:t_end; % the actual time vector
    
    % Analog signal 
    sig_analog = sqrt( 10.^((P_dBm - 30)/10) * 50 ) .* randn(fs_analog/1E6,1);   % AWGN with power P_dBm on 50 ohm line

    [freq_analog, MagFFT_analog] = MagFFT(t_analog, sig_analog, Zpd);
    MagFFT_analog_dBm = 10*log10(W.*MagFFT_analog.^2) + 30;
    
    %% Plotting the noise - Section 5
    ylimFD = [-100 0];
    xlimFD = [-100 100];
    plot(freq_analog/1E9, MagFFT_analog_dBm, 'LineWidth', 2.5)
    grid on; grid minor;
    set(gca, 'FontSize', 18)
    xlabel('Frequency [GHz]', 'FontSize',20)
    ylabel('$|X(f)|^2$ [dBm]', 'FontSize',20)
    xlim(xlimFD)
    ylim(ylimFD);
end

function [Freq, X] = MagFFT(t, x, Zpad)
    Ns = length(x);
    Xfft = fft(x, Ns + Zpad);
    Ms = length(Xfft);
    XfftShift = fftshift(Xfft)./Ns;
    X = 2*abs(XfftShift);
    Fs = 1/(t(2) - t(1));
    Freq = linspace(-Fs/2, Fs/2, Ms);
end